$pastel : #cec0d6;
$pastelHover : #52067a;
$fond :rgb(255, 248, 219);
$kaki: rgb(180, 139, 10);

.cardsHosto, .cardRecherche{
    display: flex;
    flex-wrap: wrap;
    justify-content: space-evenly;
    .card:hover{
        transform: scale(102%);
    }
    .card{
        transform: scale(100%);
        transition: transform .2s ease-in-out, max-height 0.35s ease-out;
    }
}

.cardRecherche{
    margin-bottom: 2em;
    .card{
        min-height: 0;
        height: 250px;
        background-color: $pastel;
        box-shadow: 5px 5px 6px rgba(0,0,0,0.2);
        .card-title{
            h2{
                margin-top: 2em;
            }
        }
        .contentCard{
            font-size: .8em;
            font-weight: bold;
            margin: 0 4em;
            height: 100%;
            display: flex;
            align-items: center;
        }
    }
}

//italique latin
.latin{
    font-style: italic;
    width:min-content;
}

#cardRechercheTitle{
    margin-top: 2em;
}

.schemaCard{
    margin-top: 1em;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-around;
    i{
        margin-bottom: 0.5em;
        transform: rotate(90deg);
    }
    .icon{
        margin: 1em 0;
    }
    h2{
        text-align: center;
    }
}

.prelevement, .doubleSchema{
    display: flex;
    flex-direction: row;
    align-items: flex-start;
    justify-content: space-around;
    width: 100%;
}

.accouchement{
    margin-bottom: 2em;
    li{
        font-weight: bold;
        font-size: 1.1em;
        margin-left: 1em;
    }
}

.conforme, .pasConforme{
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-around;
    width: 50%;
    .icon{
        width: 64px;
        height: auto;
    }
    p{
        margin-bottom: 1em;
    }
    i{
        margin: 0;
    }
}


#arrowConforme{
    transform: rotate(90deg)
}

#conforme{
    transform: rotate(135deg);
}

#pasConforme{
    transform: rotate(45deg);
}

#greffeArrow{
    transform: rotate(45deg) translate(35%, -35%);
}

#logolbk{
    height: auto;
    width: 180px;
}

#cordon, #poche{
    box-shadow: none;
    width: 80px;
    height: auto;
}

#cordon{
    margin-top: 2em;
    transform: rotate(45deg);
}

.prodCordon, .prodSang{
    margin-left: 3em;
    .tooltipText{
        font-size: 1em;
    }
}

.prodSang{
    margin-top: 3em;
}

.listeUsage{
    margin-left: 2em;
}


//schema que peut on donner ?
$itemWith: (
    1200: 200px,
    992: 170px,
    768: 140px,
    576: 120px,
    360: 100px,
    320: 80px
);

$horizontalLinkLength: (
  1200: 210px,
  992: 180px,
  768: 140px,
  576: 120px,
  360: 100px,
  320: 80px
);

$Linkwidth: (
  992: 18px,
  768: 14px,
  576: 12px,
  320: 10px
);

.schemaDon{
    margin-bottom: 2em;
    .root{
        cursor: pointer;
        margin: auto;
        width: min-content;
        height: min-content;
        img{
            width: 125px;
            height: auto;
        }
    }
    
    .link{
        background-color: $pastelHover;
        height: 90px;
        width: map-get($Linkwidth, 320);
        margin: 0 auto;
        position: relative;
    }

    .horizontalLink{
        height: map-get($Linkwidth, 320);
        width: map-get($horizontalLinkLength, 320);
        background-color: $pastel;
        margin: 0;
        position: relative;
    }

    .item{
        width: map-get($itemWith, 320);
        max-height: 140px;
        text-align: center;
        border: $kaki 2px solid;
        border-radius: 15px;
        margin: 0;
        transition: max-height 0.35s ease-out;
        h2{
            font-size: 0.6em;
        }
        img{
            margin: 5px 0;
            cursor: pointer;
        }
    }
    .textItem{
        text-align: center;
        margin: 0;
        max-height: 0;
        overflow: hidden;
        transition: max-height 0.35s ease-out;
        h2{
            color: $kaki;
            font-size: 0.6em;
        }
    }
    
    .activeLink{
        background-color: $pastelHover !important;
    }

    .firstStep{
        max-height: 0;
        transition: max-height 0.35s ease-out;
        overflow: hidden;
        .firstLink{
            position: relative;
            top: map-get($Linkwidth, 320);
            z-index: 1;
            background-color: $pastel;
        }
    }
    .node{
        margin: auto;
        display: flex;
        justify-content: center;
        .left, .right{
            margin: 0;
            width: 50%;
            .link{
                background-color: $pastel;
                margin: 0;
            }
            .item{
                position: relative;
            }
        }
        .left{
            .horizontalLink , link{
                left: calc(100% - #{map-get($horizontalLinkLength, 320)});
            }
            .link{
                left: calc(100% - #{map-get($horizontalLinkLength, 320)});
            }
            .item{
                left: calc(100% - #{map-get($horizontalLinkLength, 320)});
                margin-left: calc( -#{map-get($itemWith, 320)}/2 + #{map-get($Linkwidth, 320)}/2);
            }
        }
        .right{
            .horizontalLink{
                right: 0;
            }
            .link{
                left: calc(#{map-get($horizontalLinkLength, 320)} - #{map-get($Linkwidth, 320)});
            }
            .item{
                left: calc(#{map-get($horizontalLinkLength, 320)}/2);
            }
        }
    }

    .delta{
        .link{
            margin-top: - map-get($Linkwidth, 320);
            margin-bottom: - map-get($Linkwidth, 320);
            background-color: $pastel;
            z-index: 1;
        }
        .horizontal{
            display: flex;
            justify-content: center;
        }
       
    }
    .sangNode{
        max-height: 0;
        transition: max-height 0.35s ease-out;
        overflow: hidden;
        .center{
            .link{
                background-color: $pastel;
                right: calc(#{map-get($horizontalLinkLength, 320)} - #{map-get($Linkwidth, 320)}/2);
            }
            .horizontalLink{
                left: calc(50% - #{map-get($horizontalLinkLength, 320)});
            }
        }
        .triple{
            display: flex;
            justify-content: space-between;
            width: 2*map-get($horizontalLinkLength, 320);
            margin: auto;
            .link{
                background-color: $pastel;
                margin: 0;
                margin-top: -10px;
            }
            /* .itemLeft{
                position: relative;
                left: calc( -#{map-get($itemWith, 320)}/2 + #{map-get($Linkwidth, 320)}/2);
            }
            .itemRight{
                position: relative;
                left: calc( #{map-get($itemWith, 320)}/2 - #{map-get($Linkwidth, 320)}/2);
            } */
            .item{
                position: relative;
                left: calc( -#{map-get($itemWith, 320)}/2 + #{map-get($Linkwidth, 320)}/2);
            }
        }
        .delta{
            .horizontal{
                .horizontalLinkLeft, .horizontalLinkRight{
                    width: calc(1*#{map-get($horizontalLinkLength, 320)});
                }
            }
        }
    }
    .cordonNode{
        max-height: 0;
        transition: max-height 0.35s ease-out;
        overflow: hidden;
        .center{
            .link{
                background-color: $pastel;
                left: calc(#{map-get($horizontalLinkLength, 320)} - #{map-get($Linkwidth, 320)}/2);
            }
            .horizontalLink{
                left: 50%;
            }
        }
        .double{
            display: flex;
            justify-content: space-between;
            width: 2*map-get($horizontalLinkLength, 320);
            margin: auto;
            .link{
                background-color: $pastel;
                margin: 0;
                margin-top: -10px;
            }
            .itemLeft{
                position: relative;
                left: calc( -#{map-get($itemWith, 320)}/2 + #{map-get($Linkwidth, 320)}/2);
            }
            .itemRight{
                position: relative;
                left: calc( #{map-get($itemWith, 320)}/2 - #{map-get($Linkwidth, 320)}/2);
            }
        }
    }
}


//responsive

// Small devices (landscape phones, 576px and up)
/* @media (min-width: 576px) {

    .schemaDon{
        .root{
            img{
                width: 100px;
            }
        }
        
        .link{
            height: 90px;
            width: 18px;
        }

        .horizontalLink{
            height: 18px;
            width: map-get($horizontalLinkLength, 1200);
        }

        .item{
            width: map-get($itemWith, 1200);
            max-height: 225px;
            h2{
                font-size: 1.1em;
            }
            img{
                margin: 5px 0;
            }
        }
        .textItem{
            h2{
                font-size: 1.1em;
            }
        }

        .firstStep{
            .firstLink{
                top: 18px;
            }
        }
        .node{
            .left{
                .horizontalLink , link{
                    left: calc(100% - #{map-get($horizontalLinkLength, 1200)});
                }
                .link{
                    left: calc(100% - #{map-get($horizontalLinkLength, 1200)});
                }
                .item{
                    left: calc(100% - #{map-get($horizontalLinkLength, 1200)});
                    margin-left: -91px;
                }
            }
            .right{
                .link{
                    left: calc(#{map-get($horizontalLinkLength, 1200)} - 18px);
                }
                .item{
                    left: calc(#{map-get($horizontalLinkLength, 1200)}/2);
                }
            }
        }

        .delta{
            .link{
                margin-top: -18px;
                margin-bottom: -18px;
            }
        }
        .sangNode{
            .center{
                .link{
                    right: calc(#{map-get($horizontalLinkLength, 1200)} - 18px/2);
                }
                .horizontalLink{
                    left: calc(50% - #{map-get($horizontalLinkLength, 1200)});
                }
            }
            .triple{
                width: 3*map-get($horizontalLinkLength, 1200);
                .link{
                    margin-top: -10px;
                }
                .itemLeft{
                    left: -91px;
                }
                .itemRight{
                    left: 91px;
                }
            }
            .delta{
                .horizontal{
                    .horizontalLinkLeft, .horizontalLinkRight{
                        width: calc(1.5*#{map-get($horizontalLinkLength, 1200)});
                    }
                }
            }
        }
        .cordonNode{
            .center{
                .link{
                    left: calc(#{map-get($horizontalLinkLength, 1200)} - 18px/2);
                }
                .horizontalLink{
                    left: 50%;
                }
            }
            .double{
                width: 2*map-get($horizontalLinkLength, 1200);
                .link{
                    margin-top: -10px;
                }
                .itemLeft{
                    left: -91px;
                }
                .itemRight{
                    left: 91px;
                }
            }
        }
    }
} */

// Large devices (desktops, 992px and up)
@media (min-width: 992px) {
    .cardRecherche{
        .card{
            width: 350px;
            .contentCard{
                font-size: 1em;
            }
        }
    }

    .schemaCard{
        h2{
            font-size: 1.5em;
        }
    }

    #logolbk{
        height: auto;
        width: 250px;
    }
}

